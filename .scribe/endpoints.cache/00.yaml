## Autogenerated by Scribe. DO NOT MODIFY.

name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/documentation
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display Swagger API page.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <title>L5 Swagger UI</title>
              <link rel="stylesheet" type="text/css" href="http://localhost/docs/asset/swagger-ui.css?v=0755b7093afdd36d03212b65315f0209">
              <link rel="icon" type="image/png" href="http://localhost/docs/asset/favicon-32x32.png?v=40d4f2c38d1cd854ad463f16373cbcb6" sizes="32x32"/>
              <link rel="icon" type="image/png" href="http://localhost/docs/asset/favicon-16x16.png?v=f0ae831196d55d8f4115b6c5e8ec5384" sizes="16x16"/>
              <style>
              html
              {
                  box-sizing: border-box;
                  overflow: -moz-scrollbars-vertical;
                  overflow-y: scroll;
              }
              *,
              *:before,
              *:after
              {
                  box-sizing: inherit;
              }

              body {
                margin:0;
                background: #fafafa;
              }
              </style>
              </head>

          <body >
          <div id="swagger-ui"></div>

          <script src="http://localhost/docs/asset/swagger-ui-bundle.js?v=070303e1056e80b1e8f8c0227fbb3b69"></script>
          <script src="http://localhost/docs/asset/swagger-ui-standalone-preset.js?v=6b2892eb9458da5c3224817b3984d14c"></script>
          <script>
              window.onload = function() {
                  // Build a system
                  const ui = SwaggerUIBundle({
                      dom_id: '#swagger-ui',
                      url: "http://localhost/docs?api-docs.json",
                      operationsSorter: null,
                      configUrl: null,
                      validatorUrl: null,
                      oauth2RedirectUrl: "http://localhost/api/oauth2-callback",

                      requestInterceptor: function(request) {
                          request.headers['X-CSRF-TOKEN'] = '';
                          return request;
                      },

                      presets: [
                          SwaggerUIBundle.presets.apis,
                          SwaggerUIStandalonePreset
                      ],

                      plugins: [
                          SwaggerUIBundle.plugins.DownloadUrl
                      ],

                      layout: "StandaloneLayout",
                      docExpansion : "none",
                      deepLinking: true,
                      filter: true,
                      persistAuthorization: "false",

                  })

                  window.ui = ui

                      }
          </script>
          </body>
          </html>
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/oauth2-callback
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display Oauth2 callback pages.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          <!doctype html>
          <html lang="en-US">
          <head>
              <title>Swagger UI: OAuth2 Redirect</title>
          </head>
          <body>
          <script>
              'use strict';
              function run () {
                  var oauth2 = window.opener.swaggerUIRedirectOauth2;
                  var sentState = oauth2.state;
                  var redirectUrl = oauth2.redirectUrl;
                  var isValid, qp, arr;

                  if (/code|token|error/.test(window.location.hash)) {
                      qp = window.location.hash.substring(1).replace('?', '&');
                  } else {
                      qp = location.search.substring(1);
                  }

                  arr = qp.split("&");
                  arr.forEach(function (v,i,_arr) { _arr[i] = '"' + v.replace('=', '":"') + '"';});
                  qp = qp ? JSON.parse('{' + arr.join() + '}',
                          function (key, value) {
                              return key === "" ? value : decodeURIComponent(value);
                          }
                  ) : {};

                  isValid = qp.state === sentState;

                  if ((
                    oauth2.auth.schema.get("flow") === "accessCode" ||
                    oauth2.auth.schema.get("flow") === "authorizationCode" ||
                    oauth2.auth.schema.get("flow") === "authorization_code"
                  ) && !oauth2.auth.code) {
                      if (!isValid) {
                          oauth2.errCb({
                              authId: oauth2.auth.name,
                              source: "auth",
                              level: "warning",
                              message: "Authorization may be unsafe, passed state was changed in server. The passed state wasn't returned from auth server."
                          });
                      }

                      if (qp.code) {
                          delete oauth2.state;
                          oauth2.auth.code = qp.code;
                          oauth2.callback({auth: oauth2.auth, redirectUrl: redirectUrl});
                      } else {
                          let oauthErrorMsg;
                          if (qp.error) {
                              oauthErrorMsg = "["+qp.error+"]: " +
                                  (qp.error_description ? qp.error_description+ ". " : "no accessCode received from the server. ") +
                                  (qp.error_uri ? "More info: "+qp.error_uri : "");
                          }

                          oauth2.errCb({
                              authId: oauth2.auth.name,
                              source: "auth",
                              level: "error",
                              message: oauthErrorMsg || "[Authorization failed]: no accessCode received from the server."
                          });
                      }
                  } else {
                      oauth2.callback({auth: oauth2.auth, token: qp, isValid: isValid, redirectUrl: redirectUrl});
                  }
                  window.close();
              }

              if (document.readyState !== 'loading') {
                  run();
              } else {
                  document.addEventListener('DOMContentLoaded', function () {
                      run();
                  });
              }
          </script>
          </body>
          </html>
        headers:
          content-type: 'text/html; charset=UTF-8'
          cache-control: 'no-cache, private'
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Register a new user.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'لا يجوز أن يكون value أكبر من 255 حرفًا.'
        required: true
        example: raf
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'يجب أن يكون value عنوان بريد إلكتروني صالح. لا يجوز أن يكون value أكبر من 255 حرفًا.'
        required: true
        example: pgoyette@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: 'يجب أن يكون value على الأقل 8 حرفًا.'
        required: true
        example: 'w2hXD4AQVt{;*M4@lr'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      type:
        name: type
        description: ''
        required: true
        example: owner
        type: string
        enumValues:
          - owner
          - user
        exampleWasSpecified: false
        nullable: false
        custom: []
      role:
        name: role
        description: 'The <code>name</code> of an existing record in the roles table.'
        required: true
        example: nemo
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: raf
      email: pgoyette@example.com
      password: 'w2hXD4AQVt{;*M4@lr'
      type: owner
      role: nemo
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Login the user.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'لا يجوز أن يكون value أكبر من 255 حرفًا.'
        required: true
        example: ypfiovecgdtnehtlunraa
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'يجب أن يكون value عنوان بريد إلكتروني صالح. لا يجوز أن يكون value أكبر من 255 حرفًا.'
        required: true
        example: joelle.ullrich@example.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: 'يجب أن يكون value على الأقل 8 حرفًا.'
        required: true
        example: 'ZB8!g<:P[q'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      type:
        name: type
        description: ''
        required: true
        example: owner
        type: string
        enumValues:
          - owner
          - user
        exampleWasSpecified: false
        nullable: false
        custom: []
      role:
        name: role
        description: 'The <code>name</code> of an existing record in the roles table.'
        required: true
        example: expedita
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: ypfiovecgdtnehtlunraa
      email: joelle.ullrich@example.org
      password: 'ZB8!g<:P[q'
      type: owner
      role: expedita
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/password/email
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Send password reset link.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'لا يجوز أن يكون value أكبر من 255 حرفًا.'
        required: true
        example: wghwgswthhitorfcdvmjvdrt
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'يجب أن يكون value عنوان بريد إلكتروني صالح. لا يجوز أن يكون value أكبر من 255 حرفًا.'
        required: true
        example: madaline.marquardt@example.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: 'يجب أن يكون value على الأقل 8 حرفًا.'
        required: true
        example: '127YllvGI6C%)d:'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      type:
        name: type
        description: ''
        required: true
        example: owner
        type: string
        enumValues:
          - owner
          - user
        exampleWasSpecified: false
        nullable: false
        custom: []
      role:
        name: role
        description: 'The <code>name</code> of an existing record in the roles table.'
        required: true
        example: quo
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: wghwgswthhitorfcdvmjvdrt
      email: madaline.marquardt@example.org
      password: '127YllvGI6C%)d:'
      type: owner
      role: quo
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/password/reset
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Reset the user password.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'لا يجوز أن يكون value أكبر من 255 حرفًا.'
        required: true
        example: olifcldcmhgjhw
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'يجب أن يكون value عنوان بريد إلكتروني صالح. لا يجوز أن يكون value أكبر من 255 حرفًا.'
        required: true
        example: name23@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: 'يجب أن يكون value على الأقل 8 حرفًا.'
        required: true
        example: 'w&.7:.^49Nh*1~>zTDN^'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      type:
        name: type
        description: ''
        required: true
        example: user
        type: string
        enumValues:
          - owner
          - user
        exampleWasSpecified: false
        nullable: false
        custom: []
      role:
        name: role
        description: 'The <code>name</code> of an existing record in the roles table.'
        required: true
        example: enim
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: olifcldcmhgjhw
      email: name23@example.com
      password: 'w&.7:.^49Nh*1~>zTDN^'
      type: user
      role: enim
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/user
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/threads
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/messages/chatThread
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      chat_thread_id:
        name: chat_thread_id
        description: 'The <code>id</code> of an existing record in the chat_threads table.'
        required: true
        example: quaerat
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'The <code>id</code> of an existing record in the users table.'
        required: true
        example: facilis
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      chat_thread_id: quaerat
      user_id: facilis
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/messages
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      message:
        name: message
        description: 'لا يجوز أن يكون value أكبر من 1000 حرفًا.'
        required: true
        example: ajiikf
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      agent_id:
        name: agent_id
        description: 'The <code>id</code> of an existing record in the users table.'
        required: true
        example: sit
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      message: ajiikf
      agent_id: sit
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/favorite
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/favorites/toggle
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'تشغيل/إيقاف العنصر في المفضلة.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      property_id:
        name: property_id
        description: 'The <code>id</code> of an existing record in the properties table.'
        required: true
        example: 19
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      property_id: 19
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/favorites
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/notifications/unread
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get unread notifications for the authenticated user.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/notifications
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all notifications for the authenticated user with pagination.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/notifications/{notificationId}/read'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Mark a notification as read.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      notificationId:
        name: notificationId
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      notificationId: et
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/notifications/read
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Mark all notifications as read for the authenticated user.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/notifications/{notificationId}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a notification.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      notificationId:
        name: notificationId
        description: ''
        required: true
        example: in
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      notificationId: in
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: api/notifications
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete all notifications for the authenticated user.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/properties
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a new property.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      name.en:
        name: name.en
        description: 'لا يجوز أن يكون value أكبر من 255 حرفًا.'
        required: true
        example: w
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      name.ar:
        name: name.ar
        description: 'لا يجوز أن يكون value أكبر من 255 حرفًا.'
        required: true
        example: svzeopxnpokjgcwbqsiccqt
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: ''
        required: true
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description.en:
        name: description.en
        description: ''
        required: true
        example: maxime
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description.ar:
        name: description.ar
        description: ''
        required: true
        example: sunt
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      location:
        name: location
        description: 'لا يجوز أن يكون value أكبر من 255 حرفًا.'
        required: true
        example: wyrulxnamdsi
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      price:
        name: price
        description: ''
        required: true
        example: 78712.736367
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      status:
        name: status
        description: ''
        required: true
        example: active
        type: string
        enumValues:
          - active
          - inactive
        exampleWasSpecified: false
        nullable: false
        custom: []
      property_images:
        name: property_images
        description: 'يجب أن يكون value صورة. لا يجوز أن يكون value أكبر من 3000 كيلو بايت.'
        required: false
        example:
          - null
        type: 'file[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      latitude:
        name: latitude
        description: 'يجب أن يكون value بين -90 و 90.'
        required: false
        example: -89
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      longitude:
        name: longitude
        description: 'يجب أن يكون value بين -180 و 180.'
        required: false
        example: -180
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      rooms:
        name: rooms
        description: 'يجب أن يكون value على الأقل 0.'
        required: true
        example: 84
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      bathrooms:
        name: bathrooms
        description: 'يجب أن يكون value على الأقل 0.'
        required: true
        example: 54
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      living_room_size:
        name: living_room_size
        description: 'يجب أن يكون value على الأقل 0.'
        required: true
        example: 10
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      additional_features:
        name: additional_features
        description: ''
        required: false
        example: voluptas
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      type:
        name: type
        description: ''
        required: true
        example: villa
        type: string
        enumValues:
          - apartment
          - villa
          - land
          - office
          - commercial
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name:
        en: w
        ar: svzeopxnpokjgcwbqsiccqt
      description:
        en: maxime
        ar: sunt
      location: wyrulxnamdsi
      price: 78712.736367
      status: active
      latitude: -89
      longitude: -180
      rooms: 84
      bathrooms: 54
      living_room_size: 10
      additional_features: voluptas
      type: villa
    fileParameters:
      property_images:
        - null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/properties/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the property.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      name.en:
        name: name.en
        description: 'لا يجوز أن يكون value أكبر من 255 حرفًا.'
        required: true
        example: usbs
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      name.ar:
        name: name.ar
        description: 'لا يجوز أن يكون value أكبر من 255 حرفًا.'
        required: true
        example: r
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: ''
        required: true
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description.en:
        name: description.en
        description: ''
        required: true
        example: est
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description.ar:
        name: description.ar
        description: ''
        required: true
        example: dolorem
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      location:
        name: location
        description: 'لا يجوز أن يكون value أكبر من 255 حرفًا.'
        required: true
        example: nbscuydsknhuk
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      price:
        name: price
        description: ''
        required: true
        example: 0.4096
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      status:
        name: status
        description: ''
        required: true
        example: active
        type: string
        enumValues:
          - active
          - inactive
        exampleWasSpecified: false
        nullable: false
        custom: []
      property_images:
        name: property_images
        description: 'يجب أن يكون value صورة. لا يجوز أن يكون value أكبر من 2048 كيلو بايت.'
        required: false
        example:
          - null
        type: 'file[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      latitude:
        name: latitude
        description: 'يجب أن يكون value بين -90 و 90.'
        required: false
        example: -89
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      longitude:
        name: longitude
        description: 'يجب أن يكون value بين -180 و 180.'
        required: false
        example: -180
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      rooms:
        name: rooms
        description: 'يجب أن يكون value على الأقل 0.'
        required: true
        example: 86
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      bathrooms:
        name: bathrooms
        description: 'يجب أن يكون value على الأقل 0.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      living_room_size:
        name: living_room_size
        description: 'يجب أن يكون value على الأقل 0.'
        required: true
        example: 65
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      additional_features:
        name: additional_features
        description: ''
        required: false
        example: odio
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      type:
        name: type
        description: ''
        required: true
        example: villa
        type: string
        enumValues:
          - apartment
          - villa
          - land
          - office
          - commercial
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name:
        en: usbs
        ar: r
      description:
        en: est
        ar: dolorem
      location: nbscuydsknhuk
      price: 0.4096
      status: active
      latitude: -89
      longitude: -180
      rooms: 86
      bathrooms: 2
      living_room_size: 65
      additional_features: odio
      type: villa
    fileParameters:
      property_images:
        - null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/properties/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show the details of a property.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the property.'
        required: true
        example: beatae
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: beatae
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/properties/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the property.'
        required: true
        example: repellat
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: repellat
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/properties
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a list of properties.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      query:
        name: query
        description: ''
        required: false
        example: dolore
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      location:
        name: location
        description: ''
        required: false
        example: rerum
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      type:
        name: type
        description: ''
        required: false
        example: commercial
        type: string
        enumValues:
          - apartment
          - villa
          - land
          - office
          - commercial
        exampleWasSpecified: false
        nullable: true
        custom: []
      min_price:
        name: min_price
        description: ''
        required: false
        example: 62920.30484309
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      max_price:
        name: max_price
        description: ''
        required: false
        example: 10.655
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      rooms:
        name: rooms
        description: 'يجب أن يكون value على الأقل 0.'
        required: false
        example: 84
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      bathrooms:
        name: bathrooms
        description: 'يجب أن يكون value على الأقل 0.'
        required: false
        example: 44
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      sort_by:
        name: sort_by
        description: ''
        required: false
        example: bathrooms
        type: string
        enumValues:
          - price
          - name
          - location
          - rooms
          - bathrooms
        exampleWasSpecified: false
        nullable: true
        custom: []
      sort_direction:
        name: sort_direction
        description: ''
        required: false
        example: desc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: true
        custom: []
      per_page:
        name: per_page
        description: 'يجب أن يكون value على الأقل 1. لا يجوز أن يكون value أكبر من 100.'
        required: false
        example: 4
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      page:
        name: page
        description: 'يجب أن يكون value على الأقل 1.'
        required: false
        example: 9
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      query: dolore
      location: rerum
      type: commercial
      min_price: 62920.30484309
      max_price: 10.655
      rooms: 84
      bathrooms: 44
      sort_by: bathrooms
      sort_direction: desc
      per_page: 4
      page: 9
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/reports/renters
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/reports/installments
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/reports/buyers
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/reports/renter/{userId}/{propertyId}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      userId:
        name: userId
        description: ''
        required: true
        example: reprehenderit
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      propertyId:
        name: propertyId
        description: ''
        required: true
        example: incidunt
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      userId: reprehenderit
      propertyId: incidunt
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/reports/installment/{userId}/{propertyId}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      userId:
        name: userId
        description: ''
        required: true
        example: distinctio
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      propertyId:
        name: propertyId
        description: ''
        required: true
        example: quaerat
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      userId: distinctio
      propertyId: quaerat
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/dashboard/analytics
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/process-transaction
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'معالجة المعاملات بأنواعها المختلفة'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      property_id:
        name: property_id
        description: 'The <code>id</code> of an existing record in the properties table.'
        required: true
        example: quis
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      transaction_type:
        name: transaction_type
        description: ''
        required: true
        example: rent
        type: string
        enumValues:
          - sale
          - rent
          - installment
        exampleWasSpecified: false
        nullable: false
        custom: []
      price:
        name: price
        description: 'يجب أن يكون value على الأقل 0.'
        required: true
        example: 25
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      duration_months:
        name: duration_months
        description: 'يجب أن يكون value على الأقل 1.'
        required: false
        example: 89
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      payment_method:
        name: payment_method
        description: ''
        required: true
        example: tabby
        type: string
        enumValues:
          - stripe
          - tamara
          - tabby
        exampleWasSpecified: false
        nullable: false
        custom: []
      payment_method_id:
        name: payment_method_id
        description: 'This field is required when <code>payment_method</code> is <code>stripe</code>.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      property_id: quis
      transaction_type: rent
      price: 25
      duration_months: 89
      payment_method: tabby
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/payment/success
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/payment/cancel
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
